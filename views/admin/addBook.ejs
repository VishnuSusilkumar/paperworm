<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title>PaperWorm | <%= title%></title>

    <link rel="apple-touch-icon" sizes="180x180" href="../template/assets/img/favicons/apple-touch-icon.png">
    <link rel="icon" type="image/png" sizes="32x32" href="../template/assets/img/favicons/favicon-32x32.png">
    <link rel="icon" type="image/png" sizes="16x16" href="../template/assets/img/favicons/favicon-16x16.png">
    <link rel="shortcut icon" type="image/x-icon" href="../template/assets/img/favicons/favicon-32x32.png">
    <link rel="manifest" href="../template/assets/img/favicons/manifest.json">
    <meta name="msapplication-TileImage" content="../template/assets/img/favicons/mstile-150x150.png">

    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.2/font/bootstrap-icons.css" integrity="sha384-b6lVK+yci+bfDmaY1u0zE8YYJt0TZxLEAFyYSLHId4xoVvsrQu3INevFKo+Xir8e" crossorigin="anonymous">
    <!-- Font Icon -->
    <link rel="stylesheet" href="fonts/material-icon/css/material-design-iconic-font.min.css">

    <!-- Main css -->
    <link rel="stylesheet" href="../signup/css2/style.css">
    <link href="../signup/css/bootstrap.css" rel="stylesheet" />

    <!-- <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css"> -->
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@10.16.6/dist/sweetalert2.min.js"></script>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@10.16.6/dist/sweetalert2.min.css">

  
    <script src="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.js"></script>

    <style>
      .swal2-container {
        z-index: 99999999 !important;
      }
    </style>

</head>
<body>

    <div class="main">

        <div class="container">
            <div class="booking-content">

                <div class="booking-image">
                    <img class="booking-img" src="../signup/images/form-img.jpg" alt="Booking Image" style="height: 100%;">
                </div>
                <div class="booking-form">
                    <form class="py-4" id="addBook" action="/admin/addBook" method="post" enctype="multipart/form-data" onsubmit="return addBookValidation()">
                        <h2>Add Book</h2>
                        <div id="error"></div>
                        <% if(warning) {%>
                          <div class="alert alert-warning border border-warning w-80 d-flex justify-content-center fw-bold py-2" role="alert" ><%= warning %></div>
                        <% } %>
                       
                        <div class="form-group form-input">
                            <input type="text" name="bookName" id="bookName" required/>
                            <label for="bookName" class="form-label">Book Name</label>
                        </div>
                        <label style="color :#bebebe" class="pt-1">Book Details</label>
                        <div class="form-group form-input pt-2">
                            <textarea name="bookDetails" class="form-control" id="bookDetails" style="background-color: #111; color: aliceblue; height: 100px;"></textarea>
                        </div>
                        <div class="d-flex justify-content-between">
                            <div class="form-group form-input pt-2 w-50">
                                <label for="author" style="color :#bebebe">Author:</label>
                                <select name="author" id="author" class="bg-dark ps-2" style="color :#bebebe">
                                    <option value="">Select Author</option>
                                    <% authors.forEach((author) =>{ %>
                                        <option value="<%= author._id %>"><%= author.authorName %></option>
                                    <% }) %>
                                </select>
                            </div>
                            <div class="pt-4">
                                <button type="button" class="btn btn-danger btn-sm" data-toggle="modal" data-target="#addAuthor">Add Author</button>
                            </div>
                        </div>                   
                        <div class="d-flex justify-content-between">
                            <div class="form-group form-input pt-2 w-50">
                                <label for="genre" style="color :#bebebe">Genre:</label>
                                <select name="genre" id="genre" class="bg-dark ps-2" style="color :#bebebe">
                                    <option value="">Select Author</option>
                                    <% genres.forEach((genre) =>{ %>
                                        <option value="<%= genre._id %>"><%= genre.genreName %></option>
                                    <% }) %>
                                </select>
                            </div>
                            <div class="pt-4">
                                <button type="button" class="btn btn-danger btn-sm" data-toggle="modal" data-target="#addGenremodal">Add Genre</button>
                            </div>
                        </div>
                        <div class="form-group form-input pt-2">
                          <label for="language" style="color :#bebebe">Language:</label>
                          <select name="language" id="language" class="bg-dark ps-2" style="color :#bebebe">
                              <option value="">Select Language</option>
                              <option value="Acholi">Acholi</option>
                              <option value="Afrikaans">Afrikaans</option>
                              <option value="Akan">Akan</option>
                              <option value="Albanian">Albanian</option>
                              <option value="Amharic">Amharic</option>
                              <option value="Arabic">Arabic</option>
                              <option value="Armenian">Armenian</option>
                              <option value="Assamese">Assamese</option>
                              <option value="Azerbaijani">Azerbaijani</option>
                              <option value="Balochi">Balochi</option>
                              <option value="Bamanankan">Bamanankan</option>
                              <option value="Bashkir">Bashkir</option>
                              <option value="Basque">Basque</option>
                              <option value="Belarusian">Belarusian</option>
                              <option value="Bengali">Bengali</option>
                              <option value="Bhojpuri">Bhojpuri</option>
                              <option value="Bosnian">Bosnian</option>
                              <option value="Brahui">Brahui</option>
                              <option value="Bulgarian">Bulgarian</option>
                              <option value="Burmese">Burmese</option>
                              <option value="Cantonese">Cantonese</option>
                              <option value="Catalan">Catalan</option>
                              <option value="Cebuano">Cebuano</option>
                              <option value="Chechen">Chechen</option>
                              <option value="Chhattisgarhi">Chhattisgarhi</option>
                              <option value="Chittagonian">Chittagonian</option>
                              <option value="Czech">Czech</option>
                              <option value="Danish">Danish</option>
                              <option value="Dari">Dari</option>
                              <option value="Dholuo">Dholuo</option>
                              <option value="Dutch">Dutch</option>
                              <option value="English">English</option>
                              <option value="Estonian">Estonian</option>
                              <option value="Ewe">Ewe</option>
                              <option value="Fijian">Fijian</option>
                              <option value="Filipino">Filipino</option>
                              <option value="Finnish">Finnish</option>
                              <option value="French">French</option>
                              <option value="Fula">Fula</option>
                              <option value="Galician">Galician</option>
                              <option value="Georgian">Georgian</option>
                              <option value="German">German</option>
                              <option value="Greek">Greek</option>
                              <option value="Gujarati">Gujarati</option>
                              <option value="Haitian Creole">Haitian Creole</option>
                              <option value="Hakka">Hakka</option>
                              <option value="Haryanvi">Haryanvi</option>
                              <option value="Hausa">Hausa</option>
                              <option value="Hawaiian">Hawaiian</option>
                              <option value="Hebrew">Hebrew</option>
                              <option value="Hiligaynon">Hiligaynon</option>
                              <option value="Hindi">Hindi</option>
                              <option value="Hmong">Hmong</option>
                              <option value="Hungarian">Hungarian</option>
                              <option value="Icelandic">Icelandic</option>
                              <option value="Igbo">Igbo</option>
                              <option value="Ilocano">Ilocano</option>
                              <option value="Indonesian">Indonesian</option>
                              <option value="Inuit">Inuit</option>
                              <option value="Irish">Irish</option>
                              <option value="Italian">Italian</option>
                              <option value="Japanese">Japanese</option>
                              <option value="Javanese">Javanese</option>
                              <option value="Kannada">Kannada</option>
                              <option value="Kazakh">Kazakh</option>
                              <option value="Khmer">Khmer</option>
                              <option value="Kinyarwanda">Kinyarwanda</option>
                              <option value="Kirundi">Kirundi</option>
                              <option value="Konkani">Konkani</option>
                              <option value="Korean">Korean</option>
                              <option value="Kurdish">Kurdish</option>
                              <option value="Lao">Lao</option>
                              <option value="Latvian">Latvian</option>
                              <option value="Lithuanian">Lithuanian</option>
                              <option value="Luxembourgish">Luxembourgish</option>
                              <option value="Macedonian">Macedonian</option>
                              <option value="Malagasy">Malagasy</option>
                              <option value="Malay">Malay</option>
                              <option value="Malayalam">Malayalam</option>
                              <option value="Maltese">Maltese</option>
                              <option value="Mandarin">Mandarin</option>
                              <option value="Marathi">Marathi</option>
                              <option value="Mongolian">Mongolian</option>
                              <option value="Nepali">Nepali</option>
                              <option value="Norwegian">Norwegian</option>
                              <option value="Oriya">Oriya</option>
                              <option value="Oromo">Oromo</option>
                              <option value="Pashto">Pashto</option>
                              <option value="Persian">Persian</option>
                              <option value="Polish">Polish</option>
                              <option value="Portuguese">Portuguese</option>
                              <option value="Punjabi">Punjabi</option>
                              <option value="Quechua">Quechua</option>
                              <option value="Romanian">Romanian</option>
                              <option value="Russian">Russian</option>
                              <option value="Samoan">Samoan</option>
                              <option value="Sanskrit">Sanskrit</option>
                              <option value="Sardinian">Sardinian</option>
                              <option value="Serbian">Serbian</option>
                              <option value="Shona">Shona</option>
                              <option value="Sindhi">Sindhi</option>
                              <option value="Sinhalese">Sinhalese</option>
                              <option value="Slovak">Slovak</option>
                              <option value="Slovenian">Slovenian</option>
                              <option value="Somali">Somali</option>
                              <option value="Spanish">Spanish</option>
                              <option value="Sudanese">Sudanese</option>
                              <option value="Swahili">Swahili</option>
                              <option value="Swedish">Swedish</option>
                              <option value="Tagalog">Tagalog</option>
                              <option value="Tajik">Tajik</option>
                              <option value="Tamil">Tamil</option>
                              <option value="Tatar">Tatar</option>
                              <option value="Telugu">Telugu</option>
                              <option value="Thai">Thai</option>
                              <option value="Tibetan">Tibetan</option>
                              <option value="Tigrinya">Tigrinya</option>
                              <option value="Tongan">Tongan</option>
                              <option value="Turkish">Turkish</option>
                              <option value="Turkmen">Turkmen</option>
                              <option value="Ukrainian">Ukrainian</option>
                              <option value="Urdu">Urdu</option>
                              <option value="Uzbek">Uzbek</option>
                              <option value="Vietnamese">Vietnamese</option>
                              <option value="Welsh">Welsh</option>
                              <option value="Xhosa">Xhosa</option>
                              <option value="Yiddish">Yiddish</option>
                              <option value="Yoruba">Yoruba</option>
                              <option value="Zulu">Zulu</option>
                          </select>
                        </div>

                        <div class="form-group form-input pt-2">
                          <label for="image1" style="color: #bebebe">Upload Image 1:</label>
                          <div class="d-flex">
                              <input type="file" class="form-control" name="myFiles" id="image1" onchange="updatePreview(this, 'imagePreview', 1)" style="color: #bebebe" />
                              <button type="button" class="btn btn-sm btn-warning ml-2" data-toggle="modal" data-target="#imageModal1" id="previewBtn1" disabled>Preview</button>
                          </div>
                      </div>
                      
                      <!-- Add this inside the form for each image input -->
                      <div class="form-group form-input pt-2">
                          <label for="image2" style="color: #bebebe">Upload Image 2:</label>
                          <div class="d-flex">
                            <input type="file" class="form-control" name="myFiles" id="image2" onchange="updatePreview(this, 'imagePreview', 2)" style="color: #bebebe" />
                            <button type="button" class="btn btn-sm btn-warning" data-toggle="modal" data-target="#imageModal2" id="previewBtn2" disabled>Preview</button>
                          </div>
                      </div>
                      
                      <!-- Add this inside the form for each image input -->
                      <div class="form-group form-input pt-2">
                          <label for="image3" style="color: #bebebe">Upload Image 3:</label>
                          <div class="d-flex">
                            <input type="file" class="form-control" name="myFiles" id="image3" onchange="updatePreview(this, 'imagePreview', 3)" style="color: #bebebe" />
                            <button type="button" class="btn btn-sm btn-warning" data-toggle="modal" data-target="#imageModal3" id="previewBtn3" disabled>Preview</button>
                          </div>
                      </div>
                      
                      <!-- Single Modal -->
                      <div class="modal fade" id="imageModal1" tabindex="-1" role="dialog" aria-labelledby="imageModalLabel1" aria-hidden="true">
                          <div class="modal-dialog" role="document">
                              <div class="modal-content">
                                  <div class="modal-body">
                                      <img id="modalImage1" src="" alt="Image" style="width: 100%;">
                                  </div>
                              </div>
                          </div>
                      </div>
                      
                      <div class="modal fade" id="imageModal2" tabindex="-1" role="dialog" aria-labelledby="imageModalLabel2" aria-hidden="true">
                        <div class="modal-dialog" role="document">
                            <div class="modal-content">
                                <div class="modal-body">
                                    <img id="modalImage2" src="" alt="Image" style="width: 100%;">
                                </div>
                            </div>
                        </div>
                    </div>
                    
                    <div class="modal fade" id="imageModal3" tabindex="-1" role="dialog" aria-labelledby="imageModalLabel3" aria-hidden="true">
                        <div class="modal-dialog" role="document">
                            <div class="modal-content">
                                <div class="modal-body">
                                    <img id="modalImage3" src="" alt="Image" style="width: 100%;">
                                </div>
                            </div>
                        </div>
                    </div>

                      


                        
                        <div class="d-flex justify-content-between">
                            <div class="form-group form-input  w-30">
                                <input type="number" name="rating" id="rating" required />
                                <label for="rating" class="form-label">Rating</label>
                            </div>
                            <div class="form-group form-input  w-30">
                              <input type="number" name="pages" id="pages" required />
                              <label for="pages" class="form-label">Pages</label>
                            </div>
                        </div>
                        <div class="d-flex justify-content-between">
                            <div class="form-group form-input w-30">
                                <input type="number" name="retailPrice" id="retailPrice"required />
                                <label for="retailPrice" class="form-label">Retails Price</label>
                            </div>
                            <div class="form-group form-input w-30">
                                <input type="number" name="stock" id="stock" required />
                                <label for="stock" class="form-label">Stock Quantity</label>
                            </div>
                        </div>
                        <div class="form-group d-flex form-input pt-2">
                          <a href="/admin/productManagement">
                            <button type="button" value="Add Book" class="submit px-3  me-3" id="submit" name="submit"/>Back</button>
                          </a>
                            <button type="submit" value="Add Book" class="submit px-3" id="submit" name="submit" style="background-color: red;"/>Add Book</button>
                        </div>
                    </form>
                </div>
            </div>
        </div>

              <!-- ============================================-->
              <!-- add author ============================-->

              <div class="modal fade" id="addAuthor" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
                <div class="modal-dialog modal-dialog-centered" role="document">
                  <div class="modal-content">
                    <form id="addAuthor" class="p-2" action="/admin/addAuthorInAddBook" method="post" onsubmit="addAuthor(event)" enctype="multipart/form-data">
                        <div class="modal-header">
                          <h5 class="modal-title text-dark" id="exampleModalLongTitle">Add Author</h5>
                              <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                <span aria-hidden="true">&times;</span>
                               </button>
                        </div>
                        <div class="modal-body">
                          <div id="addAuthorAlert"></div>
                          <div class="form-outline mb-1">
                            <label class="form-label text-dark" for="typeUsernameX-1" style="position: static;">Enter Author</label>
                            <input type="text" id="addAuthorName" class="form-control form-control-lg mb-3" name="authorName" required/>
                            <label class="form-label text-dark" for="typeUsernameX-1" style="position: static; font-size: 14px;">Author Details</label>
                            <textarea name="authorDetails" class="form-control mb-3" id="addAuthorDetails" style="height: 150px;" required></textarea>
                            <label class="form-label text-dark" for="typeUsernameX-1" style="position: static;">Author Image</label>
                            <input type="file" id="authorImageAddBook" class="form-control form-control-lg" name="authorImageAddBook" accept="image/png, image/jpeg, image/jpg" onchange="validateFile(this);" required/>
                          </div>
                        </div>
                        <div class="modal-footer">
                          <button type="button" class="btn btn-secondary" id="closeButton1" data-dismiss="modal">Close</button>
                          <button type="submit" class="btn btn-primary">Add</button>
                        </div>
                      </form>
                    </div>
                  </div>
                </div>
  
                <!-- add author============================-->
                <!-- ============================================-->


              <!-- ============================================-->
              <!-- add genre ============================-->

              <div class="modal hide" id="addGenremodal" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
                <div class="modal-dialog modal-dialog-centered" role="document">
                  <div class="modal-content">
                    <form id="addGenre" class="p-2" action="/admin/addGenreInAddBook" method="post" onsubmit="addGenre(event)">
                      <div class="modal-header">
                        <h5 class="modal-title text-dark" id="exampleModalLongTitle">Add Genre</h5>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                          <span aria-hidden="true">&times;</span>
                        </button>
                      </div>
                      <div class="modal-body">
                        <div id="addGenreAlert"></div>
                        <div class="form-outline mb-1">
                          <label class="form-label text-dark" for="typeUsernameX-1" style="position: static;">Enter Genre</label>
                            <input type="text" id="addGenreName" class="form-control form-control-lg" name="genre" required/>  
                        </div>
                      </div>
                      <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" id="closeButton2" data-dismiss="modal">Close</button>
                        <button type="submit" class="btn btn-primary">Add</button>
                      </div>
                    </form>
                  </div>
                </div>
              </div>
            <!-- add genre ============================-->
            <!-- ============================================-->


            
    </div>



   

    <script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0/dist/js/bootstrap.bundle.min.js"></script>


    <script>


          function addGenre(event) {
          // Validate the form inputs
          if (!addGenreValidation()) {
            // Validation failed, do not proceed with the fetch
            return;
          }
        
          event.preventDefault(); // Prevent default form submission
        
          const url = window.location.origin;
          const addGenreName = document.getElementById('addGenreName').value;
        
          fetch(`${url}/admin/addGenreInAddBook`, {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json',
            },
            body: JSON.stringify({ genre: addGenreName }),
          })
            .then((response) => response.json())
            .then((data) => {
              if (data.success) {
                
                const newGenre = data.genre;
                // Update UI or take necessary actions for success
                console.log('Genre added successfully');
                // Add the new genre to the select list
                const genreSelect = document.getElementById('genre');
                const newOption = document.createElement('option');
                newOption.value = newGenre._id; // Assuming you receive the new genre's ID from the server
                newOption.text = newGenre.genreName; // Use the entered genre name
                genreSelect.add(newOption);

                document.getElementById('closeButton2').click();
              } else {
                // Handle error, show error message, or take necessary actions
                console.error('Error adding genre:', data.error);
                document.getElementById('closeButton2').click();
              
                const errorElement = document.getElementById('error');
                errorElement.innerHTML = `<div class="alert alert-danger w-80 d-flex justify-content-center fw-bold py-2" role="alert">${data.error}</div>`;
                setTimeout(() => {
                  errorElement.innerHTML = '';
                }, 3000);

              }
            })
            .catch((error) => {
              console.error('Fetch error:', error);
            });
        }

        function addGenreValidation() {
          const addGenreName = document.getElementById('addGenreName');
          const errorAddElement = document.getElementById('addGenreAlert');
        
          if (addGenreName.value === '' || addGenreName.value.trim() === '') {
            errorAddElement.innerHTML = `<div class="alert alert-warning w-80 d-flex justify-content-center fw-bold py-2" role="alert" >Genre name field is empty</div>`;
            setTimeout(() => {
              errorAddElement.innerHTML = '';
            }, 3000);
            return false;
          }
        
          if (addGenreName.value.length > 30) {
            errorAddElement.innerHTML = `<div class="alert alert-warning w-80 d-flex justify-content-center fw-bold py-2" role="alert" >Genre Name must be less than 30 characters</div>`;
            setTimeout(() => {
              errorAddElement.innerHTML = '';
            }, 3000);
            return false;
          }
        
          errorAddElement.innerHTML = '';
          return true;
        }






            function addAuthor(event) {
            // Validate the form inputs
            if (!addAuthorValidation()) {
              // Validation failed, do not proceed with the fetch
              return;
            }
          
            event.preventDefault(); // Prevent default form submission
          
            const url = window.location.origin;
            const addAuthorName = document.getElementById('addAuthorName').value;
            const addAuthorDetails = document.getElementById('addAuthorDetails').value;
            const authorImageAddBook = document.getElementById('authorImageAddBook').files[0];
          
            const formData = new FormData();
            formData.append('authorName', addAuthorName);
            formData.append('authorDetails', addAuthorDetails);
            formData.append('authorImageAddBook', authorImageAddBook);
          
            fetch(`${url}/admin/addAuthorInAddBook`, {
              method: 'POST',
              body: formData,
            })
              .then((response) => response.json())
              .then((data) => {
                if (data.success) {
                  
                  // Update UI or take necessary actions for success
                  console.log('Author added successfully');

                  const newAuthor = data.author;

                  // You can add more actions as needed
                  const authorSelect = document.getElementById('author');
                  const newAuthorOption = document.createElement('option');
                  newAuthorOption.value = newAuthor._id; // Assuming you receive the new author's ID from the server
                  newAuthorOption.text = newAuthor.authorName; // Use the entered author name
                  authorSelect.add(newAuthorOption);

                  document.getElementById('closeButton1').click();
                  
                } else {
                  // Handle error, show error message, or take necessary actions
                  console.error('Error adding author:', data.error);
                  document.getElementById('closeButton1').click();
                
                  // Display error message to the user
                  const errorElement = document.getElementById('error');
                  errorElement.innerHTML = `<div class="alert alert-danger w-80 d-flex justify-content-center fw-bold py-2" role="alert">${data.error}</div>`;
                  setTimeout(() => {
                    errorElement.innerHTML = '';
                  }, 3000);
                }
              })
              .catch((error) => {
                console.error('Fetch error:', error);
              });
          }

          function addAuthorValidation(){
              const addAuthorName = document.getElementById(`addAuthorName`);
              const addAuthorDetails = document.getElementById(`addAuthorDetails`);
              const errorAddAuthorElement = document.getElementById(`addAuthorAlert`);
              console.log(addAuthorName)
              console.log(addAuthorDetails)
              if(addAuthorName.value === "" || addAuthorName.value.trim()==""){
                  console.log("1111111111111111111");
                  errorAddAuthorElement.innerHTML =`<div class="alert alert-warning w-80 d-flex justify-content-center fw-bold py-2" role="alert" >Author name field is empty</div>`;
                  setTimeout(()=>{
                      errorAddAuthorElement.innerHTML = ""
                  },3000)
                  return false;
              }
              if(addAuthorName.value.length >30){
                  console.log("2222222222222222222");
                  errorAddAuthorElement.innerHTML =`<div class="alert alert-warning w-80 d-flex justify-content-center fw-bold py-2" role="alert" >Author Name must Less than 30 Characters</div>`;
                  setTimeout(()=>{
                      errorAddAuthorElement.innerHTML = ""
                  },3000)
                  return false;
              }
            
              if(addAuthorDetails.value === "" || addAuthorDetails.value.trim()==""){
                  errorAddAuthorElement.innerHTML =`<div class="alert alert-warning w-80 d-flex justify-content-center fw-bold py-2" role="alert" >Author details field is empty</div>`;
                  setTimeout(()=>{
                      errorAddAuthorElement.innerHTML = ""
                  },3000)
                  return false;
              }
              if(addAuthorDetails.value.length >1000){
                  errorAddAuthorElement.innerHTML =`<div class="alert alert-warning w-80 d-flex justify-content-center fw-bold py-2" role="alert" >Author details must Less than 500 Characters</div>`;
                  setTimeout(()=>{
                      errorAddAuthorElement.innerHTML = ""
                  },3000)
                  return false;
              }
              if(addAuthorDetails.value.length <30){
                  errorAddAuthorElement.innerHTML =`<div class="alert alert-warning w-80 d-flex justify-content-center fw-bold py-2" role="alert" >Author details must greater than 30 Characters</div>`;
                  setTimeout(()=>{
                      errorAddAuthorElement.innerHTML = ""
                  },3000)
                  return false;
              }
            
              errorAddAuthorElement.innerHTML = "";
              return true;
          }



      function validateFile(input) {
          let fileType = input.files[0].type;
          if (fileType != "image/jpeg" && fileType != "image/png" && fileType != "image/jpg") {
              input.value = "";
              swal.fire("Invalid file format", "Please upload a JPEG, PNG, or JPG file.", "error");
          }
          let fileType2 = input.files[1].type;
          if (fileType2 != "image/jpeg" && fileType2 != "image/png" && fileType2 != "image/jpg") {
              input.value = "";
              swal.fire("Invalid file format", "Please upload a JPEG, PNG, or JPG file.", "error");
          }
          let fileType3 = input.files[2].type;
          if (fileType3 != "image/jpeg" && fileType3 != "image/png" && fileType3 != "image/jpg") {
              input.value = "";
              swal.fire("Invalid file format", "Please upload a JPEG, PNG, or JPG file.", "error");
          }
      }

      function updatePreview(input, previewId, imageNumber) {
        const previewContainer = document.getElementById(`${previewId}${imageNumber}`);
        const previewBtn = document.getElementById(`previewBtn${imageNumber}`);
        const file = input.files[0];

        if (file) {
            const reader = new FileReader();

            reader.onload = function (e) {
                previewBtn.removeAttribute("disabled");
                previewContainer.innerHTML = "";
            };

            reader.readAsDataURL(file);
        } else {
            previewBtn.setAttribute("disabled", true);
            previewContainer.innerHTML = "No image selected";
        }
    }
    

    // Add this script at the end to handle preview button clicks
    document.getElementById("previewBtn1").addEventListener("click", function () {
        document.getElementById("modalImage1").src = document.getElementById("image1").files[0] ? URL.createObjectURL(document.getElementById("image1").files[0]) : "";
    });

    document.getElementById("previewBtn2").addEventListener("click", function () {
        document.getElementById("modalImage2").src = document.getElementById("image2").files[0] ? URL.createObjectURL(document.getElementById("image2").files[0]) : "";
    });

    document.getElementById("previewBtn3").addEventListener("click", function () {
        document.getElementById("modalImage3").src = document.getElementById("image3").files[0] ? URL.createObjectURL(document.getElementById("image3").files[0]) : "";
    });
      
    </script>

    <script src="../javascripts/addBookValidation.js"></script>
    <script src="../javascripts/addGenreValidation.js"></script>
    <script src="../javascripts/addAuthorValidation.js"></script>

    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    
  <script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/popper.js@1.16.1/dist/umd/popper.min.js"></script>
  <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
  
  


    <!-- JS -->
    <script src="../signup/vendor/jquery/jquery.min.js"></script>
    <script src="../signup/js2/main.js"></script>

    <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.11.6/dist/umd/popper.min.js" integrity="sha384-oBqDVmMz9ATKxIep9tiCxS/Z9fNfEXiDAYTujMAeBAsjFuCZSmKbSSUnQlmh/jp3" crossorigin="anonymous"></script>

</body><!-- This templates was made by Colorlib (https://colorlib.com) -->
</html>